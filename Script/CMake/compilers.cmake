
if (platform STREQUAL "arm-none-eabi")
    set(CMAKE_C_COMPILER arm-none-eabi-gcc)
    set(CMAKE_CXX_COMPILER arm-none-eabi-g++)
    set(CMAKE_ASM_COMPILER arm-none-eabi-gcc)
    set(CMAKE_AR arm-none-eabi-ar)
    set(CMAKE_OBJCOPY arm-none-eabi-objcopy)
    set(CMAKE_OBJDUMP arm-none-eabi-objdump)
    set(SIZE arm-none-eabi-size)
    set(CMAKE_TRY_COMPILE_TARGET_TYPE STATIC_LIBRARY)
elseif (platform STREQUAL "clang")
    set(CMAKE_C_COMPILER clang)
    set(CMAKE_CXX_COMPILER clang++)
    set(CMAKE_ASM_COMPILER clang)
    set(CMAKE_AR llvm-ar)
    set(CMAKE_OBJCOPY llvm-objcopy)
    set(CMAKE_OBJDUMP llvm-objdump)
    set(SIZE llvm-size)
    set(CMAKE_TRY_COMPILE_TARGET_TYPE STATIC_LIBRARY)
else ()
    message(FATAL_ERROR "Unsupported platform: ${platform}.\tPlease add support in ${CMAKE_CURRENT_LIST_FILE}")
endif ()

function(print_compiler_info)
    message(STATUS "Compiler: ${CMAKE_C_COMPILER_ID}")
    message(STATUS "\tCC: ${CMAKE_C_COMPILER}")
    message(STATUS "\tCXX: ${CMAKE_CXX_COMPILER}")
    message(STATUS "\tASM: ${CMAKE_ASM_COMPILER}")
    message(STATUS "\tOBJCOPY: ${CMAKE_OBJCOPY}")
    message(STATUS "\tOBJDUMP: ${CMAKE_OBJDUMP}")
    message(STATUS "\tSIZE: ${CMAKE_SIZE}")
    message(STATUS "\tAR: ${CMAKE_AR}")
    message(STATUS "\tTRY_COMPILE_TARGET_TYPE: ${CMAKE_TRY_COMPILE_TARGET_TYPE}")
endfunction()
